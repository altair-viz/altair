language: python

sudo: required

python:
  - 2.7
  - 3.5
  - 3.6

env:
  matrix:
  - BUILD="test" INSTALL="conda"
  - BUILD="test" INSTALL="pip"

matrix:
  include:
  - python: 3.6
    env: BUILD="docs" INSTALL="pip"
  allow_failures:
    - env: BUILD="docs"

before_install:
  - if [[ $INSTALL == 'pip' ]]; then
       pip install pip --upgrade;
       pip install -r requirements.txt;
    elif [[ $INSTALL == 'conda' ]]; then
       if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
          wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
       else
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
       fi;
       bash ./miniconda.sh -b -p $HOME/miniconda;
       export PATH="$HOME/miniconda/bin:$PATH";
       conda config --set always_yes yes --set changeps1 no;
       conda update -q conda;
       conda info -a;
       conda config --add channels conda-forge;
       conda create -q -n testenv python=$TRAVIS_PYTHON_VERSION pytest;
       source activate testenv;
       conda install --file requirements.txt;
    fi
  - if [[ $BUILD == 'docs' ]]; then
       if [[ $INSTALL == 'conda' ]]; then
          conda install --file doc/requirements.txt;
       elif [[ $INSTALL == 'pip' ]]; then
          pip install -r doc/requirements.txt;
       fi
    fi
  - if [[ $TRAVIS_PYTHON_VERSION == 2.7 ]]; then
       sudo apt-get install libcairo2-dev libjpeg8-dev libpango1.0-dev libgif-dev build-essential g++;
       npm install canvas vega vega-lite;
    fi

install:
  - python setup.py install

before_script:
    - pip install flake8  # pytest  # add another testing frameworks later
    # stop the build if there are Python syntax errors or undefined names
    - flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics
    # exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide
    - flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

script:
  - if [[ $BUILD == 'test' ]]; then
       python -m pytest altair --doctest-modules;
    elif [[ $BUILD == 'docs' ]]; then
       cd doc && make html;
    fi
